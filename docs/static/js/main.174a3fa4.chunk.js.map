{"version":3,"sources":["components/QuestionInput.js","components/QuestionAnswer.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionInput","props","prompt","answers","map","a","i","onClick","onAnswer","QuestionAnswer","className","correctI","onContinue","HomePage","App","useState","currentQuestion","setCurrentQuestion","currentSlide","setCurrentSlide","correctAnswerIndex","setCorrectAnswerIndex","shuffledAs","setShuffledAs","currentQuestionIndex","arrayLength","excludeIndex","sample","Math","floor","random","randomIndexExcept","questions","length","answersList","correctAnswer","shuffledAnswerList","inputArray","randomIndex","array","currentIndex","shuffle","indexOf","chosenAnswerIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAmBeA,MAjBf,SAAuBC,GAGnB,OACI,gCACI,6BAAKA,EAAMC,SACX,6BAEQD,EAAME,QAAQC,KAAI,SAACC,EAAEC,GAAH,OACd,6BAAY,wBAAQC,QAAS,kBAAIN,EAAMO,SAASF,IAApC,SAAyCD,KAA5CC,YCOlBG,MAhBf,SAAwBR,GACpB,OACI,gCACI,6BAAKA,EAAMC,SACX,6BAEQD,EAAME,QAAQC,KAAI,SAACC,EAAEC,GAAH,OACd,6BAAY,wBAAQI,UAAWJ,IAAIL,EAAMU,SAAS,UAAU,YAAhD,SAA8DN,KAAjEC,QAIrB,wBAAQC,QAASN,EAAMW,WAAvB,0BCHGC,MARf,SAAkBZ,GACd,OACI,8BACI,wBAAQM,QAASN,EAAMW,WAAvB,gCCuFGE,MAjFf,WAGE,MAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAGA,EAAoDJ,mBAAS,GAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KA4DA,OACE,qBAAKb,UAAU,MAAf,SAEuB,IAAjBQ,EACE,cAAC,EAAD,CAAUN,WApDpB,WACEO,EAAgB,GAGhB,IAAIK,EAbN,SAA2BC,EAAaC,GACtC,IAAIC,EAASC,KAAKC,MAAMD,KAAKE,UAAYL,EAAY,IAErD,OAAIE,GAAUD,EACLC,EAAS,EAEXA,EAOoBI,CAAkBC,EAAUC,OAAQjB,GAC/DC,EAAmBO,GAGnB,IAAIU,EAAcF,EAAUR,GAAsBrB,QAC9CgC,EAAgBD,EAAY,GAE5BE,EAON,SAAiBC,GACf,IACkCC,EAD9BC,EAAK,YAAOF,GACZG,EAAeD,EAAMN,OAGzB,KAAwB,IAAjBO,GAAoB,CAGzBF,EAAcV,KAAKC,MAAMD,KAAKE,SAAWU,GACzCA,IAJyB,MAOmB,CAC1CD,EAAMD,GAAcC,EAAMC,IAD3BD,EAAMC,GAPkB,KAOHD,EAAMD,GAPH,KAW3B,OAAOC,EAvBkBE,CAAQP,GAEjCX,EAAca,GACdf,EAAsBe,EAAmBM,QAAQP,OAuCxB,IAAjBjB,EACA,cAAC,EAAD,CAAehB,OAAQ8B,EAAUhB,GAAiBd,OAAQC,QAASmB,EAAYd,SAjBzF,SAAsBmC,GACpBxB,EAAgB,MAiBR,cAAC,EAAD,CAAgBhB,QAASmB,EAAYX,SAAUS,EAAoBR,WAd7E,WACEO,EAAgB,SC7DLyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.174a3fa4.chunk.js","sourcesContent":["import React from 'react'\n\nfunction QuestionInput(props) {\n    \n\n    return (\n        <div>\n            <h1>{props.prompt}</h1>\n            <ol>\n                {\n                    props.answers.map((a,i)=>\n                        <li key={i}><button onClick={()=>props.onAnswer(i)}>{a}</button></li>\n                    )\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default QuestionInput\n","import React from 'react'\n\nfunction QuestionAnswer(props) {\n    return (\n        <div>\n            <h1>{props.prompt}</h1>\n            <ol>\n                {\n                    props.answers.map((a,i)=>\n                        <li key={i}><button className={i===props.correctI?\"correct\":\"incorrect\"}>{a}</button></li>\n                    )\n                }\n            </ol>\n            <button onClick={props.onContinue}>Continue</button>\n        </div>\n    )\n}\n\nexport default QuestionAnswer\n","import React from 'react'\n\nfunction HomePage(props) {\n    return (\n        <div>\n            <button onClick={props.onContinue}>Pick a question</button>\n        </div>\n    )\n}\n\nexport default HomePage\n","\nimport './App.css';\nimport { useState, useEffect, useRef } from \"react\";\n\n// import questions\nimport questions from './questions.json';\n\nimport QuestionInput from './components/QuestionInput';\nimport QuestionAnswer from './components/QuestionAnswer';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n\n  const [correctAnswerIndex, setCorrectAnswerIndex] = useState(0);\n  const [shuffledAs, setShuffledAs] = useState([]);\n  \n\n  function randomIndexExcept(arrayLength, excludeIndex){\n    let sample = Math.floor(Math.random() * (arrayLength-1));\n\n    if (sample >= excludeIndex){\n      return sample + 1;\n    }\n    return sample;\n  }\n\n  function generateQuestion(){\n    setCurrentSlide(1);\n\n    // choose new question\n    let currentQuestionIndex = randomIndexExcept(questions.length, currentQuestion);\n    setCurrentQuestion(currentQuestionIndex);\n\n    // set correct answer \n    let answersList = questions[currentQuestionIndex].answers;\n    let correctAnswer = answersList[0];\n\n    let shuffledAnswerList = shuffle(answersList);\n\n    setShuffledAs(shuffledAnswerList);\n    setCorrectAnswerIndex(shuffledAnswerList.indexOf(correctAnswer));\n\n  }\n\n  function shuffle(inputArray) {\n    let array = [...inputArray];\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\n  function selectAnswer(chosenAnswerIndex){\n    setCurrentSlide(2);\n  }\n\n  function resetQuestion(){\n    setCurrentSlide(0);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n        {\n          currentSlide === 0\n          ? <HomePage onContinue={generateQuestion}/>\n          : currentSlide === 1\n          ? <QuestionInput prompt={questions[currentQuestion].prompt} answers={shuffledAs} onAnswer={selectAnswer}/>\n          : <QuestionAnswer answers={shuffledAs} correctI={correctAnswerIndex} onContinue={resetQuestion}/>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}